{"HikerTest.cs":"\nusing NUnit.Framework;\n\n[TestFixture]\npublic class HikerTest\n{\n    [Test]\n    public void life_the_universe_and_everything()\n    {\n        // a simple example to start you off\n        Assert.AreEqual(42, Hiker.Answer);\n    }\n}\n","Hiker.cs":"\npublic class Hiker\n{\n    public static int Answer\n    {\n        get { return 6 * 9; }\n    }\n}\n","cyber-dojo.sh":"NUNIT_PATH=/nunit/NUnit.2.6.2/lib\nexport MONO_PATH=${NUNIT_PATH}\n\nmcs -t:library \\\n  -r:${NUNIT_PATH}/nunit.framework.dll \\\n  -out:RunTests.dll *.cs\n\nif [ $? -eq 0 ]; then\n  NUNIT_RUNNERS_PATH=/nunit/NUnit.Runners.2.6.1/tools\n  mono ${NUNIT_RUNNERS_PATH}/nunit-console.exe -nologo ./RunTests.dll\nfi\n","output":"ProcessModel: Default    DomainUsage: Single\nExecution Runtime: mono-4.0\n.F\nTests run: 1, Errors: 0, Failures: 1, Inconclusive: 0, Time: 0.0276 seconds\n  Not run: 0, Invalid: 0, Ignored: 0, Skipped: 0\n\nErrors and Failures:\n1) Test Failure : HikerTest.life_the_universe_and_everything\n     Expected: 42\n  But was:  54\n\nat HikerTest.life_the_universe_and_everything () [0x00007] in <44368f3155fa44839c62b6e20e4c1ce4>:0\n\n\n","instructions":"Write a program that prints the numbers from 1 to 100.\nBut for multiples of three print \"Fizz\" instead of the\nnumber and for the multiples of five print \"Buzz\". For\nnumbers which are multiples of both three and five\nprint \"FizzBuzz\".\n\nSample output:\n\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz\n16\n17\nFizz\n19\nBuzz\n... etc up to 100\n"}